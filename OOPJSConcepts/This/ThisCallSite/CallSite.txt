TL;DR : The object that is executing the current function

For more info source: https://www.youtube.com/watch?v=gvicrj31JOM

To understand this binding, we have to understand the call-site: 
the location in code where a function is called (not where it’s declared).
We must inspect the call-site to answer the question: what is this this
a reference to?
Finding the call-site is generally “go locate where a function is called
from,” but it’s not always that easy, as certain coding patterns can ob‐
scure the true call-site.
What’s important is to think about the call-stack (the stack of functions
that have been called to get us to the current moment in execution).
The call-site we care about is in the invocation before the currently
executing function.

